#include <bits/stdc++.h>
using namespace std;

struct node
{
    int data;
    struct node* left;
    struct node* right;
}*root=NULL;
struct node* GetNewNode(int data)
{
    struct  node *newnode= new node;
    newnode->data=data;
    newnode->left = newnode->right = NULL;
    return newnode;
}

struct node* bst(int *arr,int i, int n)
{

    if(i>n)
        return nullptr;
    int m=(i+n)/2;
    struct node* temp= new node;
    temp->data=arr[m];
    temp->left=bst(arr, i, m-1);
    temp->right=bst(arr,m+1,n );
    return temp;
}

void leaf(struct node* root)
{
    if(root==NULL)
        return;
    leaf(root->left);
    if(!root->left && !root->right)
    {
        cout<<root->data<<" ";
    }
    leaf(root->right);
}
void printright(struct node* root)
{
    if(root==NULL)
        return;

    if(root->right)
    {
        cout<<root->data<<" ";
        printright(root->right);
    }
    else if(root->left)
    {
        cout<<root->data<<" ";
        printright(root->right);
    }
}
void printleft(struct node* root)
{
    if(root==NULL)
        return;
    if(root->left)
    {
        cout<<root->data<<" ";
        printleft(root->right);
    }
    else if(root->right)
    {
        cout<<root->data<<" ";
        printleft(root->right);
    }
}
void boundary(struct node* root)
{
    if(root==NULL)
        return;

    cout<<root->data<<" "<<endl;
    printleft(root->left);
    cout<<endl;
    leaf(root->left);
    cout<<endl;
    leaf(root->right);
    cout<<endl;
    printright(root->right);

}


int main()
{
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++)
        cin>>arr[i];
    sort(arr, arr+n);
    root=bst(arr,0, n-1);
    
    boundary(root);
    return 0;
}
