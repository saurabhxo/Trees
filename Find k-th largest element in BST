#include <bits/stdc++.h>
using namespace std;

struct node
{
    int data;
    struct node* left;
    struct node* right;
}*root=NULL;
struct node* GetNewNood(int data)
{
    struct node* temp= new node;
    temp->data=data;
    temp->left=temp->right=NULL;
    return temp;
}
struct node* Insert(struct node* root, int data)
{
    if(root==NULL)
    root=GetNewNood(data);
    else if(data<root->data)
    {
        root->left=Insert(root->left,data);
    }
    else
    {
        root->right=Insert(root->right,data);
    }
    return root;
}
int largest(struct node* root, int *k)
{
    if(root==NULL)
    return INT_MAX;
    int right=largest(root->right,k);
    if(right!=INT_MAX)
    return right;
    if(--*k==0)
    return root->data;
    int left = largest(root->left,k);
}
int main()
{
   root=Insert(root,50);
    root=Insert(root,30);
    root=Insert(root,70);
    root=Insert(root,20);
    root=Insert(root,40);
    root=Insert(root,60);
    root=Insert(root,80);
    int k=2;
    cout<<largest(root, &k);
    return 0;
}
**********************************************************************************************************************************
o/p
70
